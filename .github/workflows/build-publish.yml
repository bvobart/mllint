name: Build mllint and upload to PyPI

# Build on every branch push, tag push, and pull request change:
on: [push, pull_request]
# Alternatively, to publish when a (published) GitHub Release is created, use the following:
# on:
#   push:
#   pull_request:
#   release:
#     types:
#       - published

jobs:
  build_golang:
    name: Build and test mllint's Golang source code on Ubuntu
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v2
        with:
          go-version: ^1.15
      - uses: actions/checkout@v2

      - uses: actions/cache@v2
        with:
          # In order:
          # * Go module download cache
          # * Go build cache (Linux)
          # * Go build cache (Mac)
          # * Go build cache (Windows)
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ubuntu-latest-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ubuntu-latest-go-

      - name: Run mllint tests
        run: make test

      - name: Build mllint executables
        run: make build-all

      - uses: actions/upload-artifact@v2
        with:
          name: mllint-binaries
          path: ./build/bin/*

  build_wheels:
    name: Build Pip wheels on ${{ matrix.os }}
    needs: build_golang
    runs-on: ${{ matrix.os }}
    strategy:
      # fail-fast: false # TODO: enable this when pipeline is stable.
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        # python: [36, 37, 38, 39]

    steps:
      - uses: actions/setup-python@v2
      - uses: actions/checkout@v2

      - name: Download mllint executables from previous job
        uses: actions/download-artifact@v2
        with:
          name: mllint-binaries

      - name: Prepare packaging
        run: make pre-package

      - name: Build Pip wheels
        uses: joerick/cibuildwheel@v1.10.0
        with:
          package-dir: ./build
          output-dir: ./build/wheelhouse

      - uses: actions/upload-artifact@v2
        with:
          name: pip-wheels
          path: ./build/wheelhouse/*.whl

  build_sdist:
    name: Build Pip package source distribution
    needs: build_golang
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2

      - name: Download mllint executables from previous job
        uses: actions/download-artifact@v2
        with:
          name: mllint-binaries

      - name: Prepare packaging
        run: make pre-package

      - name: Build Pip package source distribution
        working-directory: ./build
        run: python setup.py sdist

      - uses: actions/upload-artifact@v2
        with:
          name: pip-source-package
          path: ./build/dist/*.tar.gz

# TODO: enable this upload job:

  # upload_pypi:
  #   needs: [build_wheels, build_sdist]
  #   runs-on: ubuntu-latest
  #   # upload to PyPI on every tag starting with 'v'
  #   if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/v')
  #   # alternatively, to publish when a GitHub Release is created, use the following rule:
  #   # if: github.event_name == 'release' && github.event.action == 'published'
  #   steps:
  #     - uses: actions/download-artifact@v2
  #       with:
  #         name: artifact
  #         path: dist

  #     - uses: pypa/gh-action-pypi-publish@master
  #       with:
  #         user: __token__
  #         password: ${{ secrets.pypi_password }}
          # To test: repository_url: https://test.pypi.org/legacy/