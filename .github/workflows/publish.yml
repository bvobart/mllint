name: Publish mllint and upload to PyPI

on:
  push:
    tags:
      - "v*"

jobs:
  build_golang:
    name: Build and test mllint's Golang source code
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v2
        with:
          go-version: ^1.16
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - uses: actions/cache@v2
        with:
          # In order:
          # * Go module download cache
          # * Go build cache (Linux)
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ubuntu-latest-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ubuntu-latest-go-

      - name: Run mllint tests
        run: ./test.sh

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build mllint & release to GitHub
        uses: goreleaser/goreleaser-action@v3
        with:
          version: latest
          args: release --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/upload-artifact@v2
        with:
          name: mllint-binaries
          path: ./dist

      - name: Upload code coverage to Codecov.io
        uses: codecov/codecov-action@v1
        with:
          files: coverage.txt

  build_wheels:
    name: Build Pip wheels on ${{ matrix.os }}
    needs: build_golang
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - uses: actions/setup-python@v2
      - uses: actions/checkout@v2

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel==2.7.0

      - name: Set MLLINT_VERSION
        shell: bash
        run: echo "MLLINT_VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV

      - name: Download mllint executables from previous job
        uses: actions/download-artifact@v2
        with:
          name: mllint-binaries
          path: ./build/bin

      - name: Clean & Prepare packaging
        shell: bash
        run: |
          rm -r build/build build/dist build/mllint.egg-info || true
          cp ReadMe.md build/

      - name: Build Pip wheels
        shell: bash
        run: |
          export CIBW_ENVIRONMENT="MLLINT_VERSION=$MLLINT_VERSION"
          cibuildwheel ./build --output-dir ./build/wheelhouse
        env:
          CIBW_ARCHS_MACOS: x86_64 arm64

      - uses: actions/upload-artifact@v2
        with:
          name: pip-wheels
          path: ./build/wheelhouse/*.whl

  build_sdist:
    name: Build Pip package source distribution
    needs: build_golang
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2

      - name: Set MLLINT_VERSION
        run: echo "MLLINT_VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV

      - name: Download mllint executables from previous job
        uses: actions/download-artifact@v2
        with:
          name: mllint-binaries
          path: ./build/bin

      - name: Clean & Prepare packaging
        run: |
          rm -r build/build build/dist build/mllint.egg-info || true
          cp ReadMe.md build/

      - name: Build Pip package source distribution
        working-directory: ./build
        run: python setup.py sdist

      - uses: actions/upload-artifact@v2
        with:
          name: pip-source-package
          path: ./build/dist/*.tar.gz

  upload_pypi:
    name: Upload Pip packages to PyPI
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: pip-source-package
          path: dist
      - uses: actions/download-artifact@v2
        with:
          name: pip-wheels
          path: dist

      - uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
